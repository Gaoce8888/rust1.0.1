{"$message_type":"diagnostic","message":"unused variable: `kefu_auth_manager`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/routes/kefu_auth.rs","byte_start":15340,"byte_end":15357,"line_start":439,"line_end":439,"column_start":5,"column_end":22,"is_primary":true,"text":[{"text":"    kefu_auth_manager: Arc<KefuAuthManager>,","highlight_start":5,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/routes/kefu_auth.rs","byte_start":15340,"byte_end":15357,"line_start":439,"line_end":439,"column_start":5,"column_end":22,"is_primary":true,"text":[{"text":"    kefu_auth_manager: Arc<KefuAuthManager>,","highlight_start":5,"highlight_end":22}],"label":null,"suggested_replacement":"_kefu_auth_manager","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `kefu_auth_manager`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/routes/kefu_auth.rs:439:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m439\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    kefu_auth_manager: Arc<KefuAuthManager>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_kefu_auth_manager`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"function is expected to take 1 argument, but it takes 2 arguments","code":{"code":"E0593","explanation":"You tried to supply an `Fn`-based type with an incorrect number of arguments\nthan what was expected.\n\nErroneous code example:\n\n```compile_fail,E0593\nfn foo<F: Fn()>(x: F) { }\n\nfn main() {\n    // [E0593] closure takes 1 argument but 0 arguments are required\n    foo(|y| { });\n}\n```\n\nYou have to provide the same number of arguments as expected by the `Fn`-based\ntype. So to fix the previous example, we need to remove the `y` argument:\n\n```\nfn foo<F: Fn()>(x: F) { }\n\nfn main() {\n    foo(|| { }); // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"src/routes/api_complete.rs","byte_start":2110,"byte_end":2118,"line_start":53,"line_end":53,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"        .and_then(crate::handlers::sessions::handle_session_statistics);","highlight_start":10,"highlight_end":18}],"label":"expected function that takes 1 argument","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/handlers/sessions.rs","byte_start":7543,"byte_end":7681,"line_start":245,"line_end":248,"column_start":1,"column_end":35,"is_primary":false,"text":[{"text":"pub async fn handle_session_statistics(","highlight_start":1,"highlight_end":40},{"text":"    session_id: String,","highlight_start":1,"highlight_end":24},{"text":"    _ws_manager: Arc<WebSocketManager>,","highlight_start":1,"highlight_end":40},{"text":") -> Result<impl Reply, Rejection> {","highlight_start":1,"highlight_end":35}],"label":"takes 2 arguments","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"required for `fn(String, ...) -> ... {handle_session_statistics}` to implement `warp::generic::Func<(Arc<LocalStorage>,)>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the full name for the type has been written to '/workspace/target/debug/deps/kefu_system-5f5251588add1a48.long-type-1179639058164319690.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider using `--verbose` to print the full type name to the console","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0593]\u001b[0m\u001b[0m\u001b[1m: function is expected to take 1 argument, but it takes 2 arguments\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/routes/api_complete.rs:53:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m53\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        .and_then(crate::handlers::sessions::handle_session_statistics);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected function that takes 1 argument\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0msrc/handlers/sessions.rs:245:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m245\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub async fn handle_session_statistics(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m246\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    session_id: String,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m247\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    _ws_manager: Arc<WebSocketManager>,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m248\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m) -> Result<impl Reply, Rejection> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|__________________________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mtakes 2 arguments\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `fn(String, ...) -> ... {handle_session_statistics}` to implement `warp::generic::Func<(Arc<LocalStorage>,)>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the full name for the type has been written to '/workspace/target/debug/deps/kefu_system-5f5251588add1a48.long-type-1179639058164319690.txt'\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider using `--verbose` to print the full type name to the console\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the method `or` exists for struct `Or<Or<Or<Or<Or<..., ...>, ...>, ...>, ...>, ...>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/routes/api_complete.rs","byte_start":4772,"byte_end":4975,"line_start":117,"line_end":124,"column_start":5,"column_end":10,"is_primary":false,"text":[{"text":"    system_info","highlight_start":5,"highlight_end":16},{"text":"        .or(system_health_check)","highlight_start":1,"highlight_end":33},{"text":"        .or(online_users)","highlight_start":1,"highlight_end":26},{"text":"        .or(bulk_delete_messages)","highlight_start":1,"highlight_end":34},{"text":"        .or(mark_messages_read)","highlight_start":1,"highlight_end":32},{"text":"        .or(end_session)","highlight_start":1,"highlight_end":25},{"text":"        .or(session_statistics)","highlight_start":1,"highlight_end":32},{"text":"        .or(customer_request_kefu)","highlight_start":1,"highlight_end":10}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/routes/api_complete.rs","byte_start":4975,"byte_end":4977,"line_start":124,"line_end":124,"column_start":10,"column_end":12,"is_primary":true,"text":[{"text":"        .or(customer_request_kefu)","highlight_start":10,"highlight_end":12}],"label":"method cannot be called on `Or<Or<Or<Or<Or<..., ...>, ...>, ...>, ...>, ...>` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/warp-0.3.7/src/filter/or.rs","byte_start":368,"byte_end":387,"line_start":16,"line_end":16,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"pub struct Or<T, U> {","highlight_start":1,"highlight_end":20}],"label":"doesn't satisfy `_: FilterBase` or `_: Filter`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the full type name has been written to '/workspace/target/debug/deps/kefu_system-5f5251588add1a48.long-type-18332434052458904703.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider using `--verbose` to print the full type name to the console","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the following trait bounds were not satisfied:\n`warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<WebSocketManager>,), Error = Infallible> + Clone>, fn(Arc<WebSocketManager>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_system_info}>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<WebSocketManager>,), Error = Infallible> + Clone>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<LocalStorage>,), Error = Infallible> + Clone>, fn(Arc<WebSocketManager>, Arc<LocalStorage>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {system::handle_system_health}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<WebSocketManager>,), Error = Infallible> + Clone>, fn(Arc<WebSocketManager>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_online_users}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Vec<std::string::String>,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<LocalStorage>,), Error = Infallible> + Clone>, fn(Vec<std::string::String>, Arc<LocalStorage>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_bulk_delete_messages}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Vec<std::string::String>,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<LocalStorage>,), Error = Infallible> + Clone>, fn(Vec<std::string::String>, Arc<LocalStorage>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_mark_messages_read}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (std::string::String,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<WebSocketManager>,), Error = Infallible> + Clone>, fn(std::string::String, Arc<WebSocketManager>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_end_session}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<LocalStorage>,), Error = Infallible> + Clone>, fn(std::string::String, Arc<WebSocketManager>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_session_statistics}>>: warp::filter::FilterBase`\nwhich is required by `warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<WebSocketManager>,), Error = Infallible> + Clone>, fn(Arc<WebSocketManager>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_system_info}>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<WebSocketManager>,), Error = Infallible> + Clone>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<LocalStorage>,), Error = Infallible> + Clone>, fn(Arc<WebSocketManager>, Arc<LocalStorage>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {system::handle_system_health}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<WebSocketManager>,), Error = Infallible> + Clone>, fn(Arc<WebSocketManager>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_online_users}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Vec<std::string::String>,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<LocalStorage>,), Error = Infallible> + Clone>, fn(Vec<std::string::String>, Arc<LocalStorage>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_bulk_delete_messages}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Vec<std::string::String>,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<LocalStorage>,), Error = Infallible> + Clone>, fn(Vec<std::string::String>, Arc<LocalStorage>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_mark_messages_read}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (std::string::String,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<WebSocketManager>,), Error = Infallible> + Clone>, fn(std::string::String, Arc<WebSocketManager>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_end_session}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<LocalStorage>,), Error = Infallible> + Clone>, fn(std::string::String, Arc<WebSocketManager>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_session_statistics}>>: warp::Filter`\n`&warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<WebSocketManager>,), Error = Infallible> + Clone>, fn(Arc<WebSocketManager>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_system_info}>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<WebSocketManager>,), Error = Infallible> + Clone>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<LocalStorage>,), Error = Infallible> + Clone>, fn(Arc<WebSocketManager>, Arc<LocalStorage>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {system::handle_system_health}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<WebSocketManager>,), Error = Infallible> + Clone>, fn(Arc<WebSocketManager>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_online_users}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Vec<std::string::String>,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<LocalStorage>,), Error = Infallible> + Clone>, fn(Vec<std::string::String>, Arc<LocalStorage>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_bulk_delete_messages}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Vec<std::string::String>,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<LocalStorage>,), Error = Infallible> + Clone>, fn(Vec<std::string::String>, Arc<LocalStorage>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_mark_messages_read}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (std::string::String,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<WebSocketManager>,), Error = Infallible> + Clone>, fn(std::string::String, Arc<WebSocketManager>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_end_session}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<LocalStorage>,), Error = Infallible> + Clone>, fn(std::string::String, Arc<WebSocketManager>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_session_statistics}>>: warp::filter::FilterBase`\nwhich is required by `&warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<WebSocketManager>,), Error = Infallible> + Clone>, fn(Arc<WebSocketManager>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_system_info}>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<WebSocketManager>,), Error = Infallible> + Clone>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<LocalStorage>,), Error = Infallible> + Clone>, fn(Arc<WebSocketManager>, Arc<LocalStorage>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {system::handle_system_health}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<WebSocketManager>,), Error = Infallible> + Clone>, fn(Arc<WebSocketManager>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_online_users}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Vec<std::string::String>,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<LocalStorage>,), Error = Infallible> + Clone>, fn(Vec<std::string::String>, Arc<LocalStorage>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_bulk_delete_messages}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Vec<std::string::String>,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<LocalStorage>,), Error = Infallible> + Clone>, fn(Vec<std::string::String>, Arc<LocalStorage>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_mark_messages_read}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (std::string::String,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<WebSocketManager>,), Error = Infallible> + Clone>, fn(std::string::String, Arc<WebSocketManager>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_end_session}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<LocalStorage>,), Error = Infallible> + Clone>, fn(std::string::String, Arc<WebSocketManager>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_session_statistics}>>: warp::Filter`\n`&mut warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<WebSocketManager>,), Error = Infallible> + Clone>, fn(Arc<WebSocketManager>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_system_info}>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<WebSocketManager>,), Error = Infallible> + Clone>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<LocalStorage>,), Error = Infallible> + Clone>, fn(Arc<WebSocketManager>, Arc<LocalStorage>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {system::handle_system_health}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<WebSocketManager>,), Error = Infallible> + Clone>, fn(Arc<WebSocketManager>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_online_users}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Vec<std::string::String>,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<LocalStorage>,), Error = Infallible> + Clone>, fn(Vec<std::string::String>, Arc<LocalStorage>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_bulk_delete_messages}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Vec<std::string::String>,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<LocalStorage>,), Error = Infallible> + Clone>, fn(Vec<std::string::String>, Arc<LocalStorage>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_mark_messages_read}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (std::string::String,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<WebSocketManager>,), Error = Infallible> + Clone>, fn(std::string::String, Arc<WebSocketManager>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_end_session}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<LocalStorage>,), Error = Infallible> + Clone>, fn(std::string::String, Arc<WebSocketManager>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_session_statistics}>>: warp::filter::FilterBase`\nwhich is required by `&mut warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<WebSocketManager>,), Error = Infallible> + Clone>, fn(Arc<WebSocketManager>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_system_info}>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<WebSocketManager>,), Error = Infallible> + Clone>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<LocalStorage>,), Error = Infallible> + Clone>, fn(Arc<WebSocketManager>, Arc<LocalStorage>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {system::handle_system_health}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<WebSocketManager>,), Error = Infallible> + Clone>, fn(Arc<WebSocketManager>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_online_users}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Vec<std::string::String>,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<LocalStorage>,), Error = Infallible> + Clone>, fn(Vec<std::string::String>, Arc<LocalStorage>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_bulk_delete_messages}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Vec<std::string::String>,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<LocalStorage>,), Error = Infallible> + Clone>, fn(Vec<std::string::String>, Arc<LocalStorage>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_mark_messages_read}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (std::string::String,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<WebSocketManager>,), Error = Infallible> + Clone>, fn(std::string::String, Arc<WebSocketManager>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_end_session}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<LocalStorage>,), Error = Infallible> + Clone>, fn(std::string::String, Arc<WebSocketManager>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_session_statistics}>>: warp::Filter`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the method `or` exists for struct `Or<Or<Or<Or<Or<..., ...>, ...>, ...>, ...>, ...>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/routes/api_complete.rs:124:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m117\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    system_info\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        .or(system_health_check)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m119\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        .or(online_users)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m120\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        .or(bulk_delete_messages)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m123\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        .or(session_statistics)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m124\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        .or(customer_request_kefu)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called on `Or<Or<Or<Or<Or<..., ...>, ...>, ...>, ...>, ...>` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_________|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/warp-0.3.7/src/filter/or.rs:16:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0mpub struct Or<T, U> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `_: FilterBase` or `_: Filter`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the full type name has been written to '/workspace/target/debug/deps/kefu_system-5f5251588add1a48.long-type-18332434052458904703.txt'\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider using `--verbose` to print the full type name to the console\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<WebSocketManager>,), Error = Infallible> + Clone>, fn(Arc<WebSocketManager>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_system_info}>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<WebSocketManager>,), Error = Infallible> + Clone>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<LocalStorage>,), Error = Infallible> + Clone>, fn(Arc<WebSocketManager>, Arc<LocalStorage>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {system::handle_system_health}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<WebSocketManager>,), Error = Infallible> + Clone>, fn(Arc<WebSocketManager>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_online_users}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Vec<std::string::String>,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<LocalStorage>,), Error = Infallible> + Clone>, fn(Vec<std::string::String>, Arc<LocalStorage>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_bulk_delete_messages}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Vec<std::string::String>,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<LocalStorage>,), Error = Infallible> + Clone>, fn(Vec<std::string::String>, Arc<LocalStorage>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_mark_messages_read}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (std::string::String,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<WebSocketManager>,), Error = Infallible> + Clone>, fn(std::string::String, Arc<WebSocketManager>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_end_session}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<LocalStorage>,), Error = Infallible> + Clone>, fn(std::string::String, Arc<WebSocketManager>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_session_statistics}>>: warp::filter::FilterBase`\u001b[0m\n\u001b[0m            which is required by `warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<WebSocketManager>,), Error = Infallible> + Clone>, fn(Arc<WebSocketManager>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_system_info}>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<WebSocketManager>,), Error = Infallible> + Clone>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<LocalStorage>,), Error = Infallible> + Clone>, fn(Arc<WebSocketManager>, Arc<LocalStorage>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {system::handle_system_health}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<WebSocketManager>,), Error = Infallible> + Clone>, fn(Arc<WebSocketManager>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_online_users}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Vec<std::string::String>,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<LocalStorage>,), Error = Infallible> + Clone>, fn(Vec<std::string::String>, Arc<LocalStorage>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_bulk_delete_messages}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Vec<std::string::String>,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<LocalStorage>,), Error = Infallible> + Clone>, fn(Vec<std::string::String>, Arc<LocalStorage>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_mark_messages_read}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (std::string::String,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<WebSocketManager>,), Error = Infallible> + Clone>, fn(std::string::String, Arc<WebSocketManager>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_end_session}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<LocalStorage>,), Error = Infallible> + Clone>, fn(std::string::String, Arc<WebSocketManager>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_session_statistics}>>: warp::Filter`\u001b[0m\n\u001b[0m            `&warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<WebSocketManager>,), Error = Infallible> + Clone>, fn(Arc<WebSocketManager>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_system_info}>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<WebSocketManager>,), Error = Infallible> + Clone>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<LocalStorage>,), Error = Infallible> + Clone>, fn(Arc<WebSocketManager>, Arc<LocalStorage>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {system::handle_system_health}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<WebSocketManager>,), Error = Infallible> + Clone>, fn(Arc<WebSocketManager>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_online_users}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Vec<std::string::String>,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<LocalStorage>,), Error = Infallible> + Clone>, fn(Vec<std::string::String>, Arc<LocalStorage>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_bulk_delete_messages}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Vec<std::string::String>,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<LocalStorage>,), Error = Infallible> + Clone>, fn(Vec<std::string::String>, Arc<LocalStorage>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_mark_messages_read}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (std::string::String,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<WebSocketManager>,), Error = Infallible> + Clone>, fn(std::string::String, Arc<WebSocketManager>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_end_session}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<LocalStorage>,), Error = Infallible> + Clone>, fn(std::string::String, Arc<WebSocketManager>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_session_statistics}>>: warp::filter::FilterBase`\u001b[0m\n\u001b[0m            which is required by `&warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<WebSocketManager>,), Error = Infallible> + Clone>, fn(Arc<WebSocketManager>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_system_info}>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<WebSocketManager>,), Error = Infallible> + Clone>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<LocalStorage>,), Error = Infallible> + Clone>, fn(Arc<WebSocketManager>, Arc<LocalStorage>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {system::handle_system_health}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<WebSocketManager>,), Error = Infallible> + Clone>, fn(Arc<WebSocketManager>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_online_users}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Vec<std::string::String>,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<LocalStorage>,), Error = Infallible> + Clone>, fn(Vec<std::string::String>, Arc<LocalStorage>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_bulk_delete_messages}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Vec<std::string::String>,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<LocalStorage>,), Error = Infallible> + Clone>, fn(Vec<std::string::String>, Arc<LocalStorage>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_mark_messages_read}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (std::string::String,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<WebSocketManager>,), Error = Infallible> + Clone>, fn(std::string::String, Arc<WebSocketManager>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_end_session}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<LocalStorage>,), Error = Infallible> + Clone>, fn(std::string::String, Arc<WebSocketManager>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_session_statistics}>>: warp::Filter`\u001b[0m\n\u001b[0m            `&mut warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<WebSocketManager>,), Error = Infallible> + Clone>, fn(Arc<WebSocketManager>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_system_info}>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<WebSocketManager>,), Error = Infallible> + Clone>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<LocalStorage>,), Error = Infallible> + Clone>, fn(Arc<WebSocketManager>, Arc<LocalStorage>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {system::handle_system_health}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<WebSocketManager>,), Error = Infallible> + Clone>, fn(Arc<WebSocketManager>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_online_users}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Vec<std::string::String>,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<LocalStorage>,), Error = Infallible> + Clone>, fn(Vec<std::string::String>, Arc<LocalStorage>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_bulk_delete_messages}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Vec<std::string::String>,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<LocalStorage>,), Error = Infallible> + Clone>, fn(Vec<std::string::String>, Arc<LocalStorage>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_mark_messages_read}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (std::string::String,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<WebSocketManager>,), Error = Infallible> + Clone>, fn(std::string::String, Arc<WebSocketManager>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_end_session}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<LocalStorage>,), Error = Infallible> + Clone>, fn(std::string::String, Arc<WebSocketManager>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_session_statistics}>>: warp::filter::FilterBase`\u001b[0m\n\u001b[0m            which is required by `&mut warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<WebSocketManager>,), Error = Infallible> + Clone>, fn(Arc<WebSocketManager>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_system_info}>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<WebSocketManager>,), Error = Infallible> + Clone>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<LocalStorage>,), Error = Infallible> + Clone>, fn(Arc<WebSocketManager>, Arc<LocalStorage>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {system::handle_system_health}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<WebSocketManager>,), Error = Infallible> + Clone>, fn(Arc<WebSocketManager>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_online_users}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Vec<std::string::String>,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<LocalStorage>,), Error = Infallible> + Clone>, fn(Vec<std::string::String>, Arc<LocalStorage>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_bulk_delete_messages}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Vec<std::string::String>,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<LocalStorage>,), Error = Infallible> + Clone>, fn(Vec<std::string::String>, Arc<LocalStorage>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_mark_messages_read}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (std::string::String,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<WebSocketManager>,), Error = Infallible> + Clone>, fn(std::string::String, Arc<WebSocketManager>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_end_session}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, Exact<warp::path::internal::Opaque<build_complete_api_routes::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<LocalStorage>,), Error = Infallible> + Clone>, fn(std::string::String, Arc<WebSocketManager>) -> impl futures_util::Future<Output = Result<impl Reply, Rejection>> {handle_session_statistics}>>: warp::Filter`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 2 previous errors; 1 warning emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 2 previous errors; 1 warning emitted\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0593, E0599.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0593, E0599.\u001b[0m\n"}
{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0593`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0593`.\u001b[0m\n"}
