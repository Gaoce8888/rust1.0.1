version: '3.8'

services:
  # Redis服务
  redis:
    image: redis:7-alpine
    container_name: kefu-redis
    restart: always
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-your-secure-password}
    volumes:
      - redis-data:/data
    networks:
      - kefu-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 3s
      retries: 3

  # 客服系统主服务
  kefu-app:
    build:
      context: .
      dockerfile: Dockerfile.production
    container_name: kefu-app
    restart: always
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - RUST_LOG=${RUST_LOG:-info}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-your-secure-password}@redis:6379
      - JWT_SECRET=${JWT_SECRET}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GOOGLE_TRANSLATE_API_KEY=${GOOGLE_TRANSLATE_API_KEY}
      - AZURE_SPEECH_KEY=${AZURE_SPEECH_KEY}
      - AZURE_TEXT_ANALYTICS_KEY=${AZURE_TEXT_ANALYTICS_KEY}
    volumes:
      - ./config:/app/config:ro
      - ./logs:/app/logs
      - ./uploads:/app/uploads
      - ./backups:/app/backups
    ports:
      - "${APP_PORT:-8080}:8080"
    networks:
      - kefu-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 40s

  # Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: kefu-nginx
    restart: always
    depends_on:
      kefu-app:
        condition: service_healthy
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./static:/usr/share/nginx/html/static:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx-cache:/var/cache/nginx
    ports:
      - "80:80"
      - "443:443"
    networks:
      - kefu-network
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 3s
      retries: 3

volumes:
  redis-data:
    driver: local
  nginx-cache:
    driver: local

networks:
  kefu-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16